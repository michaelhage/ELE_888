%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% LAB 2, Linear Discriminant Functions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Attribute Information for IRIS data:
%    1. sepal length in cm
%    2. sepal width in cm
%    3. petal length in cm
%    4. petal width in cm

%    class label/numeric label: 
%       -- Iris Setosa / 1 
%       -- Iris Versicolour / 2
%       -- Iris Virginica / 3


%% this script will run lab1 experiments..
clear
load irisdata.mat

%% extract unique labels (class names)
labels = unique(irisdata_labels);

%% generate numeric labels
numericLabels = zeros(size(irisdata_features,1),1);
for i = 1:size(labels,1)
    numericLabels(find(strcmp(labels{i},irisdata_labels)),:)= i;
end

%% build training data set for two class comparison
% merge feature samples with numeric labels for two class comparison (Iris
% Setosa vs. Iris Veriscolour
trainingSet = [irisdata_features(:,:) numericLabels(:,1) ];
setA = irisdata_features(numericLabels(:)==1,1:2);
setB = irisdata_features(numericLabels(:)==2,1:2);
setC = irisdata_features(numericLabels(:)==3,1:2);

%% Question 1

% Training Data (30% of the data)
n = 0.3;

% Set A
setA_training = setA(1:size(setA,1)*n, 1:2);
setA_testing = setA(size(setA,1)*n + 1:end , 1:2);

% Set B
setB_training = setB(1:size(setB,1)*n, 1:2);
setB_testing = setB(size(setB,1)*n + 1:end , 1:2);

% Criterion Function
a = criterion_function(setA_training, setB_training);

%% Question 2

sizeA = size(setA_testing,1);
sizeB = size(setB_testing,1);

test = [ones(sizeA+sizeB,1) [setA_testing; setB_testing]];
test_labels_A(1:sizeA) = 1;
test_labels_B(1:sizeB) = 2;
test_labels = [test_labels_A test_labels_B];

classification = a * test.';
acc = 0;
for i = 1:size(classification,2)
    if(classification(i) > 0) && (test_labels(i) == 1)
        acc = acc+1;
    elseif(classification(i) < 0) && (test_labels(i) == 2)
        acc = acc+1;
    end
end

accuracy = acc / (sizeA+sizeB);

